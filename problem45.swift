// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
//
// Triangle         Tn=n(n+1)/2         1, 3, 6, 10, 15, ...
// Pentagonal         Pn=n(3n−1)/2         1, 5, 12, 22, 35, ...
// Hexagonal         Hn=n(2n−1)         1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.
//
// Find the next triangle number that is also pentagonal and hexagonal.

import Foundation

let start = CFAbsoluteTimeGetCurrent()

var triangle = Set<Int>()
var pentagonal = Set<Int>()
var hexagonal = Set<Int>()
for n in 1...100000 {
    triangle.insert((n * (n + 1)) / 2)
    pentagonal.insert((n * (3 * n - 1)) / 2)
    hexagonal.insert(n * (2 * n - 1))
}
for t in triangle.sorted() {
    guard hexagonal.contains(t) && pentagonal.contains(t) else { continue }
    print(t)
}

let diff = CFAbsoluteTimeGetCurrent() - start
print("\(#function) Took \(diff) seconds")
