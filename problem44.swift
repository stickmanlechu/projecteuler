//Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
//
//1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//
//It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
//
//Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

import Foundation

let start = CFAbsoluteTimeGetCurrent()

var d = Int.max
let pentagonal = Set((1...10000).map { ($0 * ($0 * 3 - 1)) / 2 })
var leftToCheck = pentagonal
for k in pentagonal.sorted(by: >) {
    leftToCheck.remove(k)
    for j in pentagonal {
        let dCandidate = k - j
        if pentagonal.contains(dCandidate) && pentagonal.contains(k + j) {
            d = min(d, dCandidate)
        }
    }
}
print(d)

let diff = CFAbsoluteTimeGetCurrent() - start
print("\(#function) Took \(diff) seconds")

